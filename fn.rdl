core:define($,fn:count,(),(core:item($,1)*),core:integer());

core:define($,fn:avg,(),(core:atomic($,1)*),core:item()?);

core:define($,fn:max,(),(core:atomic($,1)*),core:item()?);

core:define($,fn:min,(),(core:atomic($,1)*),core:item()?);

core:define($,fn:sum,(),(core:item($,1)*),core:item());

core:define($,fn:doc,(),(core:string($,1)?),core:element()?);

core:define($,fn:collection,(),(core:string($,1)?),core:element()*);

core:define($,fn:for-each,(),(core:item($,1),core:function($,2,(core:item()),core:item()*)),core:item()*);

core:define($,fn:filter,(),(core:item($,1),core:function($,2,(core:item()),core:item()*)),core:item()*);

core:define($,fn:fold-left,(),(core:item($,1),core:item($,2),core:function($,3,(core:item()*,core:item()),core:item()*)),core:item()*);

core:define($,fn:fold-right,(),(core:item($,1),core:item($,2),core:function($,3,(core:item()*,core:item()),core:item()*)),core:item()*);

core:define($,fn:sort,(),(core:item($,1),core:function($,2,(core:item()),core:item()*)),core:item()*);

core:define($,fn:apply,(),(core:function($,1,*),core:array($,2,*)),core:item()*);

core:define($,fn:abs,(),(core:numeric($,1)?),core:numeric()?);

core:define($,fn:ceiling,(),(core:numeric($,1)?),core:numeric()?);

core:define($,fn:floor,(),(core:numeric($,1)?),core:numeric()?);

core:define($,fn:round,(),(core:numeric($,1)?),core:numeric()?);

core:define($,fn:round-half-to-even,(),(core:numeric($,1)?),core:numeric()?);

core:define($,fn:codepoints-to-string,(),(core:integer($,1)*),core:string());

core:define($,fn:string-to-codepoints,(),(core:string($,1)?),core:integer()*);

core:define($,fn:tokenize,(),(core:string($,1)?,core:string($,2)),core:string()*);

core:define($,fn:replace,(),(core:string($,1)?,core:string($,2),core:string($,3)),core:string());

core:define($,fn:matches,(),(core:string($,1)?,core:string($,2)),core:boolean());

core:define($,fn:analyze-string,(),(core:string($,1)?,core:string($,2)),core:element());

core:define($,fn:concat,(),(core:atomic($,...1)?),core:string());

core:define($,fn:string-join,(),(core:atomic($,1)*),core:string());

core:define($,fn:string-join,(),(core:atomic($,1)*,core:string($,2)),core:string());

core:define($,fn:substring,(),(core:string($,1)?,core:double($,2)),core:string());

core:define($,fn:substring,(),(core:string($,1)?,core:double($,2),core:double($,3)),core:string());

core:define($,fn:string-length,(),(core:string($,1)?),core:integer());

core:define($,fn:upper-case,(),(core:string($,1)?),core:string());

core:define($,fn:lower-case,(),(core:string($,1)?),core:string());

core:define($,fn:function-lookup,(),(core:QName($,1)?,core:integer($,2)),core:function(*));

core:define($,fn:name,(),(core:node($,1)?),core:string());

core:define($,fn:empty,(),(core:item($,1)*),core:boolean());

core:define($,fn:exists,(),(core:item($,1)*),core:boolean());

core:define($,fn:head,(),(core:item($,1)*),core:item()?);

core:define($,fn:tail,(),(core:item($,1)*),core:item()*);

core:define($,fn:insert-before,(),(core:item($,1)*,core:integer($,2),core:item($,3)*),core:item()*);

core:define($,fn:remove,(),(core:item($,1)*,core:integer($,2)),core:item()*);

core:define($,fn:reverse,(),(core:item($,1)*),core:item()*);

core:define($,fn:subsequence,(),(core:item($,1)*,core:double($,2)),core:item()*);

core:define($,fn:subsequence,(),(core:item($,1)*,core:double($,2),core:double($,3)),core:item()*);

core:define($,fn:index-of,(),(core:atomic($,1)*,core:atomic($,2)),core:integer()*);

core:define($,fn:zero-or-one,(),(core:item($,1)*),core:item()?);

core:define($,fn:one-or-more,(),(core:item($,1)*),core:item()+);

core:define($,fn:exactly-one,(),(core:item($,1)*),core:item());